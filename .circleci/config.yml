version: 2.1

master-only: &master-only
  filters:
    branches:
      only: master

executors:
  terraform:
    builder:
      - image: duckpodger/python3-node-aws-terraform

jobs:
  setup:
    executor: builder
    steps:
      - restore_cache:
          keys:
            - git-v3-{{ .Branch }}-
            - git-v3-

      - checkout

      - restore_cache:
          keys:
            - other-v1-{{ .Branch }}-
            - other-v1-

      - run:
          name: terraform
          command: |
            cd infrastructure
            terraform init
            terraform workspace new dev || terraform workspace select dev
            echo checking formatting
            terraform fmt -check=true
            echo making the plan
            terraform plan -var account_id=$ACCOUNT_ID -no-color -out=plan.file > terraform.plan


      - run:
          name: npm install
          command: |
            cd shared_python
            npm install

      - run:
          name: install virtual env & test report dirs
          command: |
            if [ ! -d ".venv" ]; then
              pipenv install
            fi
            if [ ! -d "test-reports" ]; then
              mkdir test-reports
            fi

      - persist_to_workspace:
          root: .
          paths:
            - "*"

      - store_artifacts:
          path: infrastructure/terraform.plan

      - store_artifacts:
          path: infrastructure/plan.file

      - save_cache:
          key: git-v3-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git

      - save_cache:
          key: other-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - infrastructure/.terraform
            - shared_python/.venv
            - shared_python/node_modules
            - shared_python/.serverless
            - shared_python/.cache
            - shared_python/.pytest_cache

  unit-test:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: integration tests
          command: |
            cd shared_python
            . ./.venv/bin/activate
            export AWS_REGION=eu-west-2
            export PYTHONPATH=`pwd`
            pytest --junitxml=test-reports/junit.xml -m unit tests
      - store_test_results:
          path: test-reports

  package-test:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: integration tests
          command: |
            . ./venv/bin/activate
            export AWS_REGION=eu-west-2
            export PYTHONPATH=`pwd`
            # Get short version of git hash for temporary deployment
            export USERNAME=builder
            export DEPLOY_STAGE=$(expr substr `git rev-parse HEAD` 1 8)
            npx sls --stage=$DEPLOY_STAGE package

  deploy:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            cd infrastructure
            terraform apply plan.file
      - run:
          name: serverless deploy
          command: |
            cd shared_python
            . ./.venv/bin/activate
            export AWS_REGION=eu-west-2
            export PYTHONPATH=`pwd`
            export USERNAME=builder
            npx sls --stage=dev deploy


workflows:
  version: 2
  terraform-infrastructure:
    jobs:
      - setup
      - unit-test:
          requires: [ setup ]
      - package-test:
          requires: [ setup ]
      - approve:
          type: approval
          requires:
            - unit-test
            - package-test
          <<: *master-only
      - deploy:
          requires: [ approve ]
          <<: *master-only




